version: '3.8'

services:
  postgres-db:
    image: postgres:15
    container_name: playlist-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}         # From .env
      POSTGRES_USER: ${POSTGRES_USER}       # From .env
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # From .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  backend-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: playlist-backend
    ports:
      - "8080:8080"
    depends_on:
      - postgres-db
    environment:
      # Spring Profile to activate application-docker.properties
      SPRING_PROFILES_ACTIVE: docker

      # Pass values from .env file to the Spring Boot application environment
      # These will be used by application-docker.properties' placeholders
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY}
      # Note: SPRING_DATASOURCE_URL, USERNAME, PASSWORD are automatically picked up by Spring Boot
      # if they follow the Spring Boot relaxed binding conventions for environment variables,
      # potentially overriding what's in application-docker.properties directly.
      # To be explicit, you could also set these:
      # SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/${POSTGRES_DB} # If not set by profile
      # SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      # SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
    restart: unless-stopped

volumes:
  postgres_data: